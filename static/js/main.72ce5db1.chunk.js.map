{"version":3,"sources":["components/player.js","components/song.js","components/librarysong.js","components/library.js","data.js","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","currentSong","setCurrentSong","songs","setSongs","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","useState","faPlay","icon","setIcon","skipTrackHandler","direction","a","currentIndex","findIndex","song","id","length","useEffect","newSongs","map","active","current","play","getTime","time","Math","floor","slice","anim","transform","animationPerc","className","duration","currentTime","style","background","color","type","min","max","onChange","e","target","value","onClick","size","faAngleDoubleLeft","pause","faPause","faAngleDoubleRight","Song","artist","cover","name","src","alt","LibrarySong","selectSong","Library","libraryStatus","chillHop","audio","uuidv4","Navbar","setLibraryStatus","faMusic","App","useRef","timeUpdateHandler","animatePerc","data","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72ce5db1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n// import { playSong } from \"../util\";\r\n\r\nconst Player = (props) => {\r\n  const {\r\n    currentSong,\r\n    setCurrentSong,\r\n    songs,\r\n    setSongs,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    audioRef,\r\n    songInfo,\r\n    setSongInfo,\r\n  } = props;\r\n\r\n  const [icon, setIcon] = useState(faPlay);\r\n\r\n  //time changer of song by dragging\r\n  function dragHandler(e) {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  }\r\n\r\n  // play button\r\n  const playHandler = () => {\r\n    // audioRef.current.play();\r\n    setIsPlaying(!isPlaying);\r\n    !isPlaying ? audioRef.current.play() : setIcon(faPlay);\r\n    isPlaying ? audioRef.current.pause() : setIcon(faPause);\r\n  };\r\n\r\n  // for changing song\r\n  const skipTrackHandler = async (direction) => {\r\n    //important method findIndex, returns index of the current-song matched with each song's id\r\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    // console.log(currentIndex, songs.length);\r\n    if (direction === \"skip-back\") {\r\n      if (currentIndex === 0) await setCurrentSong(songs[songs.length - 1]);\r\n      else await setCurrentSong(songs[currentIndex - 1]);\r\n    } else if (direction === \"skip-forward\") {\r\n      if (currentIndex === songs.length - 1) await setCurrentSong(songs[0]);\r\n      else await setCurrentSong(songs[currentIndex + 1]);\r\n    }\r\n  };\r\n\r\n  // using useEffect to update librar UI\r\n  useEffect(() => {\r\n    //marking active state in song\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) return { ...song, active: true };\r\n      else return { ...song, active: false };\r\n    });\r\n    setSongs(newSongs);\r\n    // playSong(isPlaying, audioRef); // not required with async-await\r\n    if (isPlaying) audioRef.current.play();\r\n  }, [currentSong]);\r\n\r\n  //converting to minutes format from whole number\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  // style animation\r\n  const anim = { transform: `translateX(${songInfo.animationPerc}%)` };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"time-control\">\r\n        <p>{songInfo.duration ? getTime(songInfo.currentTime) : \"0:00\"} </p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            onChange={dragHandler}\r\n            value={songInfo.currentTime}\r\n          />\r\n          <div style={anim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p> {songInfo.duration ? getTime(songInfo.duration) : \"0:00\"} </p>\r\n      </div>\r\n\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          className=\"skip-back\"\r\n          onClick={() => {\r\n            skipTrackHandler(\"skip-back\");\r\n          }}\r\n          size=\"2x\"\r\n          icon={faAngleDoubleLeft}\r\n        />\r\n        <div onClick={playHandler} className=\"button-container\">\r\n          <FontAwesomeIcon className=\"play\" size=\"1x\" icon={icon} />\r\n        </div>\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          onClick={() => {\r\n            skipTrackHandler(\"skip-forward\");\r\n          }}\r\n          size=\"2x\"\r\n          icon={faAngleDoubleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  const { artist, cover, name } = currentSong;\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={cover} alt=\"cover\" />\r\n      <h2>{name}</h2>\r\n      <h3>Artist: {artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { playSong } from \"../util\";\r\n\r\nconst LibrarySong = ({\r\n  songs,\r\n  song,\r\n  id,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  audioRef,\r\n  setSongs,\r\n}) => {\r\n  const { artist, cover, name } = song;\r\n\r\n  async function selectSong() {\r\n    await setCurrentSong(song);\r\n    //marking active state in song\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) return { ...song, active: true };\r\n      else return { ...song, active: false };\r\n    });\r\n    setSongs(newSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n    // playSong(isPlaying, audioRef);\r\n  }\r\n  return (\r\n    <div\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n      onClick={() => selectSong()}\r\n    >\r\n      <img src={cover} alt=\"cover\" />\r\n      <div>\r\n        <h3>{name}</h3>\r\n        <h4>--{artist}--</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./librarysong\";\r\n\r\nconst Library = (props) => {\r\n  const {\r\n    songs,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    setSongs,\r\n    libraryStatus,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"changed\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => {\r\n          return (\r\n            <LibrarySong\r\n              songs={songs}\r\n              song={song}\r\n              id={song.id}\r\n              key={song.id}\r\n              setSongs={setSongs}\r\n              audioRef={audioRef}\r\n              isPlaying={isPlaying}\r\n              setCurrentSong={setCurrentSong}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Today Feels Like Everyday\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n      artist: \"Mama Aiuto\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=12128\",\r\n      color: [\"#512812\", \"#5D831F\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Cruising\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/04/cb0cc6270d7f2e1bb13e44e8832bd5c9b2a61080-1024x1024.jpg\",\r\n      artist: \"Evil Needle\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=17087\",\r\n      color: [\"#E4AF4F\", \"#EA534C\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Take Your Time\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7-1024x1024.jpg\",\r\n      artist: \"Misha, Jussi Halme, cocabona\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=15076\",\r\n      color: [\"#E97374\", \"#453F5E\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Fast Travel\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/05/260a909fca701bbb7593f5f8f9cff9508cca2856-1024x1024.jpg\",\r\n      artist: \"Monma\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=1382\",\r\n      color: [\"#FADFCE\", \"#FAD7D3\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Hibiscus\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/858b533ba20ff95bf5b401089b195d1a8cb43870-1024x1024.jpg\",\r\n      artist: \"G Mills, Felty\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8971\",\r\n      color: [\"#6F90B6\", \"#1970B1\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = ({ setLibraryStatus, libraryStatus }) => {\r\n  // console.log(props)\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button\r\n        onClick={() => {\r\n          setLibraryStatus(!libraryStatus);\r\n        }}\r\n      >\r\n        <h4> Library </h4>\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./components/player\";\nimport Song from \"./components/song\";\nimport Library from \"./components/library\";\nimport data from \"./data\";\nimport Navbar from \"./components/navbar\";\n\nfunction App() {\n  //for getting audio\n  const audioRef = useRef(null);\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPerc: 0,\n  });\n\n  const timeUpdateHandler = (e) => {\n    const duration = e.target.duration;\n    const current = e.target.currentTime;\n    // calculate percentage\n    // const roundedCurrent = Math.round(current);\n    // const roundedDuration = Math.round(duration);\n    // const animatePerc = Math.round((roundedCurrent / roundedDuration) * 100);\n    const animatePerc = (current / duration) * 100;\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPerc: animatePerc,\n    });\n  };\n\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n\n      <Song currentSong={currentSong} />\n\n      <Player\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n      />\n\n      <Library\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        songs={songs}\n        libraryStatus={libraryStatus}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={onEndHandler}\n      ></audio>\n    </div>\n  );\n  async function onEndHandler() {\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (currentIndex === songs.length - 1) await setCurrentSong(songs[0]);\n    else await setCurrentSong(songs[currentIndex + 1]);\n    if (isPlaying) audioRef.current.play();\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}